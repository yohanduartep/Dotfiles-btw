---@diagnostic disable: undefined-global
function ColorMyPencils(color)
	color = color
	vim.cmd.colorscheme(color)
	--base
	local color_base = "#ffc7e3"
	--pink
	local color_palepink = "#ffaed0"
	local color_pink = "#ff93c9"
	local color_darkpink = "#87325c"
	--comments
	local color_darkerpink = "#5e4350"
	--just green
	local color_green = "#9bcfb4"
	--just blue
	local color_blue = "#b2bed2"
	--just yellow
	local color_yellow = "#f0c5a9"

	vim.api.nvim_set_hl(0, "@attribute", { fg = color_blue })
	vim.api.nvim_set_hl(0, "@attribute.builtin", { fg = color_blue })
	vim.api.nvim_set_hl(0, "@comment.error", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "@comment.note", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "@comment.todo", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "@comment.warning", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "@constant", { fg = color_pink })
	vim.api.nvim_set_hl(0, "@constant.builtin", { fg = color_pink })
	vim.api.nvim_set_hl(0, "@constant.css", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "@constant.macro", { fg = color_pink })
	vim.api.nvim_set_hl(0, "@constructor", { fg = color_pink })
	vim.api.nvim_set_hl(0, "@diff.delta", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "@diff.minus", { fg = color_base, bg = color_darkpink })
	vim.api.nvim_set_hl(0, "@diff.plus", { fg = color_base, bg = color_blue })
	vim.api.nvim_set_hl(0, "@function", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "@function.builtin", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "@function.call.bash", { fg = color_pink })
	vim.api.nvim_set_hl(0, "@function.method", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "@interface", { fg = color_blue })
	vim.api.nvim_set_hl(0, "@label", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "@lsp.type.method.javascript", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "@lsp.type.property.javascript", { fg = color_base })
	vim.api.nvim_set_hl(0, "@markup.heading", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "@module", { fg = color_base })
	vim.api.nvim_set_hl(0, "@module.builtin", { fg = color_base })
	vim.api.nvim_set_hl(0, "@parameter", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "@property", { fg = color_blue })
	vim.api.nvim_set_hl(0, "@property.hyprlang", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "@punctuation", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "@punctuation.special", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "@string.escape", { fg = color_green })
	vim.api.nvim_set_hl(0, "@string.regexp", { fg = color_blue })
	vim.api.nvim_set_hl(0, "@string.special.url", { fg = color_blue })
	vim.api.nvim_set_hl(0, "@type", { fg = color_green })
	vim.api.nvim_set_hl(0, "@type.builtin", { fg = color_green })
	vim.api.nvim_set_hl(0, "@variable", { fg = color_base })
	vim.api.nvim_set_hl(0, "@variable.builtin.javascript", { fg = color_base })
	vim.api.nvim_set_hl(0, "@variable.member.javascript", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "@variable.parameter", { fg = color_base })
	vim.api.nvim_set_hl(0, "@variable.parameter.builtin", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "@variable.tmux", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "Added", { fg = color_green })
	vim.api.nvim_set_hl(0, "BlinkCmpKindClass", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "BlinkCmpKindCodeium", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindColor", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "BlinkCmpKindConstant", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "BlinkCmpKindConstructor", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindCopilot", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindEnum", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindEnumMember", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindEvent", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindField", { fg = color_green })
	vim.api.nvim_set_hl(0, "BlinkCmpKindFile", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindFolder", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindFunction", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindInterface", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "BlinkCmpKindKeyword", { fg = color_green })
	vim.api.nvim_set_hl(0, "BlinkCmpKindMethod", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindModule", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindOperator", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindProperty", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindReference", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "BlinkCmpKindSnippet", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "BlinkCmpKindStruct", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindSupermaven", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindTabNine", { fg = color_blue })
	vim.api.nvim_set_hl(0, "BlinkCmpKindText", { fg = color_green })
	vim.api.nvim_set_hl(0, "BlinkCmpKindTypeParameter", { fg = color_green })
	vim.api.nvim_set_hl(0, "BlinkCmpKindUnit", { fg = color_green })
	vim.api.nvim_set_hl(0, "BlinkCmpKindValue", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "BlinkCmpKindVariable", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "Boolean", { fg = color_blue })
	vim.api.nvim_set_hl(0, "Changed", { fg = color_blue })
	vim.api.nvim_set_hl(0, "Character", { fg = color_green })
	vim.api.nvim_set_hl(0, "CmpItemAbbr", { fg = color_base })
	vim.api.nvim_set_hl(0, "CmpItemAbbrDeprecated", { fg = color_darkerpink, strikethrough = true })
	vim.api.nvim_set_hl(0, "CmpItemAbbrMatch", { fg = color_palepink, bold = true })
	vim.api.nvim_set_hl(0, "CmpItemKind", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "CmpItemKindClass", { fg = color_blue })
	vim.api.nvim_set_hl(0, "CmpItemMatchFuzzy", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "ColorColumn", { bg = color_darkpink })
	vim.api.nvim_set_hl(0, "Comment", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "Conceal", { fg = color_base })
	vim.api.nvim_set_hl(0, "Conditional", { fg = color_green })
	vim.api.nvim_set_hl(0, "Constant", { fg = color_pink })
	vim.api.nvim_set_hl(0, "CurSearch", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "Cursor", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "CursorColumn", { bg = color_darkpink })
	vim.api.nvim_set_hl(0, "CursorLine", { bg = color_darkpink })
	vim.api.nvim_set_hl(0, "CursorLineFold", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "CursorLineNr", { fg = color_blue })
	vim.api.nvim_set_hl(0, "DapUIBreakpointsCurrentLine", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "DapUIBreakpointsDisabledLine", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "DapUIBreakpointsInfo", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "DapUIBreakpointsLine", { fg = color_blue })
	vim.api.nvim_set_hl(0, "DapUIBreakpointsPath", { fg = color_blue })
	vim.api.nvim_set_hl(0, "DapUIDecoration", { fg = color_blue })
	vim.api.nvim_set_hl(0, "DapUIFloatBorder", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "DapUILineNumber", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "DapUIModifiedValue", { fg = color_blue })
	vim.api.nvim_set_hl(0, "DapUIScope", { fg = color_blue })
	vim.api.nvim_set_hl(0, "DapUIStoppedThread", { fg = color_blue })
	vim.api.nvim_set_hl(0, "DapUIThread", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "DapUIType", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "DapUIValue", { fg = color_base })
	vim.api.nvim_set_hl(0, "DapUIVariable", { fg = color_base })
	vim.api.nvim_set_hl(0, "DapUIWatchesEmpty", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "DapUIWatchesValue", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "Debug", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "Define", { fg = color_green })
	vim.api.nvim_set_hl(0, "Delimiter", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "DiagnosticDeprecated", { sp = color_darkpink, strikethrough = true })
	vim.api.nvim_set_hl(0, "DiagnosticError", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "DiagnosticHint", { fg = color_green })
	vim.api.nvim_set_hl(0, "DiagnosticInfo", { fg = color_blue })
	vim.api.nvim_set_hl(0, "DiagnosticOk", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "DiagnosticUnderlineError", { sp = color_darkpink, underline = true })
	vim.api.nvim_set_hl(0, "DiagnosticUnderlineHint", { sp = color_green, underline = true })
	vim.api.nvim_set_hl(0, "DiagnosticUnderlineInfo", { sp = color_blue, underline = true })
	vim.api.nvim_set_hl(0, "DiagnosticUnderlineOk", { sp = color_palepink, underline = true })
	vim.api.nvim_set_hl(0, "DiagnosticUnderlineWarn", { sp = color_yellow, underline = true })
	vim.api.nvim_set_hl(0, "DiagnosticVirtualTextHint", { fg = color_green })
	vim.api.nvim_set_hl(0, "DiagnosticVirtualTextInfo", { fg = color_blue })
	vim.api.nvim_set_hl(0, "DiagnosticVirtualTextOk", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "DiagnosticVirtualTextWarn", { fg = color_yellow })
	vim.api.nvim_set_hl(0, "DiagnosticWarn", { fg = color_yellow })
	vim.api.nvim_set_hl(0, "DiffAdd", { bg = color_green })
	vim.api.nvim_set_hl(0, "DiffChange", { bg = color_blue })
	vim.api.nvim_set_hl(0, "DiffDelete", { bg = color_darkpink })
	vim.api.nvim_set_hl(0, "DiffText", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "Directory", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "Error", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "ErrorMsg", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "Exception", { fg = color_blue })
	vim.api.nvim_set_hl(0, "Float", { fg = color_pink })
	vim.api.nvim_set_hl(0, "FloatBorder", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "FloatFooter", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "FloatShadow", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "FloatShadowThrough", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "FloatTitle", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "FoldColumn", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "Folded", { fg = color_base, bg = color_darkpink })
	vim.api.nvim_set_hl(0, "Function", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "FunctionName", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "IblScope", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "Identifier", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "IncSearch", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "Include", { fg = color_blue })
	vim.api.nvim_set_hl(0, "Keyword", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "Label", { fg = color_base })
	vim.api.nvim_set_hl(0, "LineNr", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "LocalVariable", { fg = color_base })
	vim.api.nvim_set_hl(0, "LspCodeLens", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "LspCodeLensSeparator", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "LspInlayHint", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "LspReferenceRead", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "LspReferenceTarget", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "LspReferenceText", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "LspReferenceWrite", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "LspSignatureActiveParameter", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "Macro", { fg = color_green })
	vim.api.nvim_set_hl(0, "MatchParen", { fg = color_base, bg = color_darkpink })
	vim.api.nvim_set_hl(0, "MiniPickMatchRanges", { fg = color_blue })
	vim.api.nvim_set_hl(0, "MiniPickPrompt", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "MiniStarterSection", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "MiniStatuslineDevinfo", { bg = color_darkerpink, fg = color_base })
	vim.api.nvim_set_hl(0, "MiniStatuslineFileinfo", { bg = color_darkerpink, fg = color_base })
	vim.api.nvim_set_hl(0, "MiniStatuslineFilename", { bg = color_darkerpink, fg = color_base })
	vim.api.nvim_set_hl(0, "MiniStatuslineInactive", { bg = color_darkerpink, fg = color_base })
	vim.api.nvim_set_hl(0, "MiniStatuslineModeCommand", { bg = color_darkpink, fg = color_base, bold = true })
	vim.api.nvim_set_hl(0, "MiniStatuslineModeInsert", { bg = color_blue, fg = color_base, bold = true })
	vim.api.nvim_set_hl(0, "ModeMsg", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "MoreMsg", { fg = color_blue })
	vim.api.nvim_set_hl(0, "NeotestAdapterName", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "NeotestDir", { fg = color_blue })
	vim.api.nvim_set_hl(0, "NeotestExpandMarker", { fg = color_green })
	vim.api.nvim_set_hl(0, "NeotestFailed", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "NeotestFile", { fg = color_blue })
	vim.api.nvim_set_hl(0, "NeotestIndent", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "NeotestMarked", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "NeotestNamespace", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "NeotestPassed", { fg = color_green })
	vim.api.nvim_set_hl(0, "NeotestRunning", { fg = color_pink })
	vim.api.nvim_set_hl(0, "NeotestSkipped", { fg = color_blue })
	vim.api.nvim_set_hl(0, "NeotestTarget", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "NeotestWatching", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "NeotestWinSelect", { fg = color_blue })
	vim.api.nvim_set_hl(0, "NonText", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "Normal", { fg = color_base, bg = "none" })
	vim.api.nvim_set_hl(0, "NormalFloat", { fg = color_base, bg = "none" })
	vim.api.nvim_set_hl(0, "NormalNC", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "Number", { fg = color_pink })
	vim.api.nvim_set_hl(0, "NvimInternalError", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "Operator", { fg = color_yellow })
	vim.api.nvim_set_hl(0, "Parameter", { fg = color_base })
	vim.api.nvim_set_hl(0, "Pmenu", { bg = color_darkerpink, fg = color_base })
	vim.api.nvim_set_hl(0, "PmenuExtra", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "PmenuExtraSel", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "PmenuKind", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "PmenuKindSel", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "PmenuSbar", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "PmenuSel", { bg = color_darkerpink, fg = color_base })
	vim.api.nvim_set_hl(0, "PmenuThumb", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "PreCondit", { fg = color_green })
	vim.api.nvim_set_hl(0, "PreProc", { fg = color_base })
	vim.api.nvim_set_hl(0, "Question", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "QuickFixLine", { fg = color_green })
	vim.api.nvim_set_hl(0, "RedrawDebugClear", { bg = color_green })
	vim.api.nvim_set_hl(0, "RedrawDebugComposed", { fg = color_base, bg = color_blue })
	vim.api.nvim_set_hl(0, "RedrawDebugRecompose", { fg = color_base, bg = color_darkpink })
	vim.api.nvim_set_hl(0, "Removed", { fg = color_darkpink })
	vim.api.nvim_set_hl(0, "Repeat", { fg = color_blue })
	vim.api.nvim_set_hl(0, "Search", { fg = color_base, bg = color_darkpink })
	vim.api.nvim_set_hl(0, "SignColumn", { fg = color_blue })
	vim.api.nvim_set_hl(0, "SnacksIndent", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "SnacksIndentBlank", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "SnacksIndentChunk", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "SnacksIndentScope", { fg = color_blue })
	vim.api.nvim_set_hl(0, "SnacksPickerMatch", { fg = color_palepink, bold = true })
	vim.api.nvim_set_hl(0, "Special", { fg = color_blue })
	vim.api.nvim_set_hl(0, "SpecialChar", { fg = color_pink })
	vim.api.nvim_set_hl(0, "SpecialComment", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "SpecialKey", { fg = color_green })
	vim.api.nvim_set_hl(0, "SpellBad", { sp = color_darkpink, underline = true })
	vim.api.nvim_set_hl(0, "SpellCap", { sp = color_darkpink, underline = true })
	vim.api.nvim_set_hl(0, "SpellLocal", { sp = color_darkpink, underline = true })
	vim.api.nvim_set_hl(0, "SpellRare", { sp = color_darkpink, underline = true })
	vim.api.nvim_set_hl(0, "Statement", { fg = color_base })
	vim.api.nvim_set_hl(0, "StatusLine", { fg = color_base, bg = color_darkpink })
	vim.api.nvim_set_hl(0, "StatusLineNC", { fg = color_base, bg = color_darkpink })
	vim.api.nvim_set_hl(0, "StatusLineTerm", { bg = color_blue })
	vim.api.nvim_set_hl(0, "StatusLineTermNC", { bg = color_blue })
	vim.api.nvim_set_hl(0, "StorageClass", { fg = color_blue })
	vim.api.nvim_set_hl(0, "String", { fg = color_blue })
	vim.api.nvim_set_hl(0, "Structure", { fg = color_blue })
	vim.api.nvim_set_hl(0, "TabLine", { fg = color_base, bg = color_darkpink })
	vim.api.nvim_set_hl(0, "TabLineSel", { bg = color_darkpink })
	vim.api.nvim_set_hl(0, "Tag", { fg = color_green })
	vim.api.nvim_set_hl(0, "TelescopeBorder", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "TelescopePreviewTitle", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "TelescopePromptMatching", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "TelescopePromptPrefix", { fg = color_blue })
	vim.api.nvim_set_hl(0, "TelescopeSelection", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "TelescopeSelectionCaret", { fg = color_palepink, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "TelescopeTitle", { fg = color_palepink, bold = true })
	vim.api.nvim_set_hl(0, "Title", { fg = color_green })
	vim.api.nvim_set_hl(0, "Todo", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "TreeSitterContext", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "TreeSitterContextLineNumber", { fg = color_palepink, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "TroubleNormal", { fg = color_base, bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "Type", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "Underlined", { fg = color_palepink, underline = true })
	vim.api.nvim_set_hl(0, "Variable", { fg = color_base })
	vim.api.nvim_set_hl(0, "Variable.builtin", { fg = color_base })
	vim.api.nvim_set_hl(0, "Variable.parameter", { fg = color_base })
	vim.api.nvim_set_hl(0, "VertSplit", { fg = color_darkerpink })
	vim.api.nvim_set_hl(0, "Visual", { fg = color_base, bg = color_darkpink })
	vim.api.nvim_set_hl(0, "VisualNC", { fg = color_base })
	vim.api.nvim_set_hl(0, "VisualNOS", { bg = color_darkpink })
	vim.api.nvim_set_hl(0, "Warning", { fg = color_yellow })
	vim.api.nvim_set_hl(0, "WarningMsg", { fg = color_yellow })
	vim.api.nvim_set_hl(0, "WinBar", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "WinBarNC", { bg = color_darkerpink })
	vim.api.nvim_set_hl(0, "WinSeparator", { fg = color_base })
	vim.api.nvim_set_hl(0, "htmlArg", { fg = color_palepink })
	vim.api.nvim_set_hl(0, "htmlEndTag", { fg = color_green })
	vim.api.nvim_set_hl(0, "htmlSpecialTagName", { fg = color_yellow })
	vim.api.nvim_set_hl(0, "htmlString", { fg = color_blue })
	vim.api.nvim_set_hl(0, "htmlTag", { fg = color_green })
	vim.api.nvim_set_hl(0, "htmlTagN", { fg = color_green })
	vim.api.nvim_set_hl(0, "htmlTagName", { fg = color_green })
	vim.api.nvim_set_hl(0, "htmlTitle", { fg = color_blue })
end

ColorMyPencils()

return {
	{
		"norcalli/nvim-colorizer.lua",
		config = function()
			require("colorizer").setup()
		end,
	},
}
